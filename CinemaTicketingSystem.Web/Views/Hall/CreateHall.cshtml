
@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "➕ Manage Hall and Sections";
    var theatres = ViewData["Theatres"] as List<CinemaTicketingSystem.Domain.Entities.Theatre>;
}

<div class="container py-4">

    <!-- Message Display Area -->
    <div id="messageArea" class="alert alert-dismissible fade d-none" role="alert">
        <span id="messageText"></span>
        <button type="button" class="btn-close" aria-label="Close" onclick="hideMessage()"></button>
    </div>

    <h2 class="text-center mb-4 fw-bold">➕ Manage Halls and Sections</h2>

    <!-- 🟦 Step 1: Add Hall -->
    <div id="addHallSection" class="card mb-4 shadow-sm rounded-4 p-4">
        <h4 class="fw-bold">🏢 Step 1: Add a New Hall</h4>
        <div class="row g-3 align-items-center">
            <div class="col-md-6">
                <label class="form-label fw-bold">🏢 Select Theatre</label>
                <select id="theatreDropdown" class="form-select">
                    <option value="">-- Select Theatre --</option>
                    @foreach (var theatre in theatres)
                    {
                        <option value="@theatre.TheatreId">@theatre.TheatreName</option>
                    }
                </select>
            </div>
            <div class="col-md-6">
                <label class="form-label fw-bold">🏷️ Hall Name</label>
                <input type="text" id="hallNameInput" class="form-control" placeholder="e.g., Hall A">
            </div>
            <div class="col-12 text-center">
                <button id="addHallButton" class="btn btn-success px-5">💾 Add Hall</button>
            </div>
        </div>
    </div>

    <!-- 🟩 Step 2: Add Sections -->
    <div id="addSectionSection" class="card mb-4 shadow-sm rounded-4 p-4 d-none">
        <h4 class="fw-bold">💺 Step 2: Add Sections and Seats</h4>
        <div id="sectionContainer">
            <!-- Dynamic Section Rows will appear here -->
        </div>
        <div class="text-center mt-3">
            <button id="addSectionRowButton" class="btn btn-primary">➕ Add Section</button>
        </div>
        <div class="text-center mt-4">
            <button id="submitSectionsButton" class="btn btn-success px-5">✅ Submit All Sections</button>
        </div>
    </div>

    <!-- 🟠 Final Action -->
    <div class="text-center mt-4">
        <a asp-controller="Theatre" asp-action="ManageTheatre" class="btn btn-secondary px-5">🏠 Finish and Return to Management</a>
    </div>
</div>

@section Scripts {
    <script>
            function showMessage(message, type = 'success') {
            const messageArea = document.getElementById('messageArea');
            const messageText = document.getElementById('messageText');

            // Set message text and style
            messageText.textContent = message;
            messageArea.classList.remove('d-none', 'alert-success', 'alert-danger');
            messageArea.classList.add('show', `alert-${type}`);

            // Auto hide after 5 seconds
            setTimeout(hideMessage, 5000);
            }

        function hideMessage() {
            const messageArea = document.getElementById('messageArea');
            messageArea.classList.remove('show');
            setTimeout(() => {
                messageArea.classList.add('d-none');
            }, 150);
        }

        let addedHallId = null;
                let sectionCounter = 0;

                // 🟢 Step 1: Add Hall
                document.getElementById('addHallButton').addEventListener('click', () => {
                    const theatreId = document.getElementById('theatreDropdown').value;
                    const hallName = document.getElementById('hallNameInput').value;

                    if (!theatreId || !hallName) {
                        showMessage('Please select a theatre and enter a hall name.', 'danger');
                        //alert('Please select a theatre and enter a hall name.');
                        return;
                    }

                    fetch('@Url.Action("AddHall", "Hall")', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ theatreId, hallName })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            addedHallId = data.hallId;
                            //alert('Hall added successfully!');
                            showMessage('Hall added successfully!', 'success');
                            document.getElementById('addSectionSection').classList.remove('d-none');
                        } else {
                            showMessage(data.message || 'Failed to add hall.', 'danger');
                            //alert('Failed to add hall.');
                        }
                    });
                });

                // 🟦 Step 2: Add Section Row Dynamically
                document.getElementById('addSectionRowButton').addEventListener('click', () => {
                    sectionCounter++;
                    const sectionContainer = document.getElementById('sectionContainer');
                    const sectionRow = document.createElement('div');
                    sectionRow.classList.add('row', 'g-3', 'align-items-center', 'mb-3');
                    sectionRow.innerHTML = `
                        <div class="col-md-4">
                            <label class="form-label fw-bold">🔠 Section Name</label>
                            <input type="text" class="form-control section-name" placeholder="e.g., Row A">
                        </div>
                        <div class="col-md-4">
                            <label class="form-label fw-bold">💺 Number of Seats</label>
                            <input type="number" class="form-control section-seats" placeholder="e.g., 20">
                        </div>
                        <div class="col-md-4 d-flex align-items-end">
                            <button type="button" class="btn btn-danger remove-section-btn">🗑️ Remove</button>
                        </div>
                    `;
                    sectionContainer.appendChild(sectionRow);

                    sectionRow.querySelector('.remove-section-btn').addEventListener('click', () => {
                        sectionRow.remove();
                    });
                });

                // 🟠 Step 3: Submit All Sections
                document.getElementById('submitSectionsButton').addEventListener('click', () => {
                    const sections = [];
                    document.querySelectorAll('#sectionContainer .row').forEach(row => {
                        const sectionName = row.querySelector('.section-name').value;
                        const numberOfSeats = row.querySelector('.section-seats').value;

                        if (sectionName && numberOfSeats) {
                            sections.push({
                                HallId: addedHallId,
                                SectionName: sectionName,
                                NumberOfSeats: numberOfSeats
                            });
                        }
                    });

                    if (sections.length === 0) {
                        showMessage('Please add at least one section.', 'danger');
                        //alert('Please add at least one section.');
                        return;
                    }

                    fetch('@Url.Action("AddSection", "Hall")', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(sections)
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            showMessage('Sections added successfully!', 'success');
                            //alert('Sections added successfully!');
                            //window.location.href = '@Url.Action("ManageTheatre", "Theatre")';
                        } else {
                            showMessage(data.message || 'Failed to add sections.', 'danger');
                            //alert('Failed to add sections.');
                        }
                    });
                });
    </script>
}


