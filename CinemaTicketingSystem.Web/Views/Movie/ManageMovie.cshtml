

@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Manage Movies";
}

@Html.AntiForgeryToken()



<div class="container-custom">
    <h2 class="mb-4 text-center">🎬 Manage Movies</h2>

    <div class="row">
        <!-- 🟦 Search movie section -->
        <div class="col-md-6">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary text-white">🔍 Search Movies</div>
                <div class="card-body">
                    <input type="text" id="searchMovie" class="form-control mb-2" placeholder="Search by Title...">
                    <button onclick="searchMovie()" class="btn btn-primary w-50">Search</button>
                </div>
            </div>
        </div>

        <!-- 🟩 Add a new movie -->
        <div class="col-md-6">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-success text-white">➕ Add Movie</div>
                <div class="card-body text-center">
                    <p>Add a new movie to the system.</p>
                    <a asp-action="AddMovie" class="btn btn-success w-100">Add Movie</a>
                </div>
            </div>
        </div>
    </div>

    <!-- 📝 Show movie list -->
    <div class="card shadow-sm" style="display: none" id="movieListSec">
        <div class="card-header bg-dark text-white">📋 Movie List</div>
        <!-- 🟢 Success Message -->
        <div id="successMessage" class="alert alert-success text-center mt-3 d-none" role="alert">
            Movie deleted successfully!
        </div>
        <div class="card-body">
            <div id="movieList">
                <!-- Search results will be here -->
            </div>
        </div>
    </div>
</div>

<!-- 🛑 Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete the movie <strong id="movieTitle"></strong>?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Confirm</button>
            </div>
        </div>
    </div>
</div>





<!-- 🛠️ Search Script -->
<script>
        function searchMovie() {
        // Hide the div before starting the search
        document.getElementById('movieListSec').style.display = 'none';

        var searchTerm = document.getElementById('searchMovie').value;
        fetch('@Url.Action("Search", "Movie")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            },
            body: JSON.stringify(searchTerm)  // Send just the string value
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Search request failed');
            }
            return response.text();
        })
        .then(html => {
            document.getElementById('movieList').innerHTML = html;
            // Show the div after getting the search results
            document.getElementById('movieListSec').style.display = 'block';
        })
        .catch(error => {
            console.error('Error:', error);
            // In case of error, you might want to show the div again
            document.getElementById('movieListSec').style.display = 'block';
        });
        }

        function loadPage(page) {
        fetch(`@Url.Action("Manage", "Movie")?page=${page}`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => response.text())
        .then(html => {
            document.getElementById('movieList').innerHTML = html;
        })
        .catch(error => console.error('Error:', error));
    }
</script>


<script>
           let selectedMovieId = null; // Stores the selected movie ID

    // 🟢 Show confirmation modal with dynamic movie details
    function confirmDelete(movieId, movieTitle) {
        selectedMovieId = movieId; // Store the selected movie ID
        document.getElementById('movieTitle').innerText = movieTitle; // Display the movie title in the modal

        // Initialize and display the Bootstrap modal
        const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
        deleteModal.show();
    }

    // 🛑 Handle Confirm Delete Button Click
    document.getElementById('confirmDeleteButton').addEventListener('click', function () {
        if (!selectedMovieId) return; // Ensure a movie ID is selected

        // Send a POST request with the ID directly as text
        fetch('@Url.Action("DeleteMovie", "Movie")', {
            method: 'POST', // HTTP POST method
            headers: {
                'Content-Type': 'application/json', // Specify JSON content type
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value // Include CSRF token
            },
            body: selectedMovieId.toString() // Send the movie ID as a plain integer string
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Failed to delete movie.'); // Handle non-OK responses
            }
            return response.json(); // Parse the response as JSON
        })
        .then(data => {
            if (data.success) {
                // Close the modal if the deletion was successful
                const deleteModal = bootstrap.Modal.getInstance(document.getElementById('deleteModal'));
                deleteModal.hide();

                // Show success message
                const successMessage = document.getElementById('successMessage');
                successMessage.classList.remove('d-none');

                // Hide the success message after 2 seconds and reload the page
                setTimeout(() => {
                    successMessage.classList.add('d-none');
                    location.reload(); // Refresh the movie list
                }, 2000);
            } else {
                // Show an alert if the server returned an error
                alert(data.message || 'Failed to delete the movie. Please try again.');
            }
        })
        .catch(error => {
            // Handle any errors during the fetch request
            console.error('Error:', error);
            alert('An error occurred while deleting the movie.');
        });
    });


</script>

 
